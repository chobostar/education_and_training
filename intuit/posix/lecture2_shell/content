Основные понятия языка shell на лексическом уровне:
- Под пробелом в дальнейшем понимается не только собственно пробел, но также и символ табуляции.
- Слово - это лексема, отличная от знака операции.
- Имя - последовательность букв, цифр, символов подчеркивания, начинающаяся с буквы или подчеркивания.
- Параметр - имя, цифра или любой из символов *, @, #, ?, -, $, !.
- Комментарий - лексема, начинающаяся с символа #, а также вся последующая часть строки.

На синтаксическом уровне различаются несколько видов команд.
- Простая команда - последовательность полей с разделителями (обычно пробелами) между ними. Первое поле определяет имя команды, которая будет выполняться; оставшиеся поля, за исключением присваиваемых параметрам и перенаправления ввода/вывода, передаются команде в качестве аргументов. Имя команды передается как аргумент 0.
- Значение простой команды - ее код завершения.
- Команда - это либо простая команда, либо одна из управляющих конструкций. Кодом завершения команды является код завершения последней выполненной простой команды.
- Конвейер - последовательность команд, разделенных знаком | . Стандартный вывод всех команд, кроме последней, направляется на стандартный ввод следующей команды конвейера. Каждая команда выполняется как самостоятельный процесс; shell ожидает завершения последней команды, код завершения которой становится кодом завершения конвейера. Формально будем считать простую команду частным случаем конвейера.
- Список - последовательность из одного или нескольких разделенных символами ;, &, && или || конвейеров, она может заканчиваться символами ; или & . Из четырех указанных операций ; и & имеют равные приоритеты, меньшие, чем у && и ||. Приоритеты последних также равны между собой. Символ ; означает, что конвейеры будут выполняться последовательно, а & - параллельно (т. е. shell не ожидает завершения конвейера ). Операция && ( || ) означает, что список, следующий за ней, будет выполняться лишь в том случае, если код завершения предыдущего конвейера нулевой (ненулевой). В списке в качестве разделителя конвейеров вместо символа ; можно использовать символ перевода строки.

Командная строка - строка текста на языке shell.
- Shell-процедура - файл, содержащий программу на языке shell.

Связующее звено между последовательными компонентами конвейера называется каналом . Иными словами, для интерпретации конвейера shell создает временный файл типа "канал", с одного конца в него заносят данные, а с другого - читают.

#### Переменные и аргументы shell-процедур

$name or ${name}

$0 - cmd_name
$1 - 1st arg
$2 - 2nd arg
...

#### Служебные переменные языка shell
# - Количество фактических аргументов (десятичное).
- - Флаги (однобуквенные опции ), указанные при запуске shell или установленные посредством команды set (см. далее).
? - Десятичное значение, возвращенное предыдущей синхронно выполненной командой.
$ - Идентификатор процесса, в рамках которого выполняется shell.
! - Идентификатор последнего асинхронно запущенного процесса.
*, @ - Совокупность всех фактических аргументов (начиная с $1 ), разделенных пробелами

#### Окружение процессов

#### Подстановка результатов выполнения команд
$(command)

#### Генерация маршрутных имен файлов

#### Перенаправление ввода/вывода

Дескрипторы с номерами 0, 1 и 2 имеют специальный смысл. Они соответствуют стандартному вводу, стандартному выводу и стандартному протоколу.

#### Экранирование

#### Встроенные команды

export
.  файл - читает и выполняет команды из файла, затем возобновляется чтение со стандартного ввода
eval  [аргумент ...] - Выполнить команду, заданную аргументами eval
exec  [аргумент ...] - Сменить программу процесса: в рамках текущего процесса команда, заданная аргументами exec, заменяет shell
exit  [код_завершения]
shift  [n]
cd  [каталог]
pwd
read  [переменная ...]
set  [опция ...] [аргумент ...]
alias  [имя[=синоним] ...]


#### Вызов командного интерпретатора shell

#### Правила формирования и средства разбора командных строк

В общем случае командная строка состоит из имени служебной программы (утилиты), опций, аргументов этих опций и, наконец, операндов команды.

1. Имя утилиты состоит не менее чем из двух и не более чем из девяти малых латинских букв и/или цифр.
2. Имя опции - это один буквенно-цифровой символ. Опциям предшествует знак минус. После одного минуса могут располагаться несколько опций без аргументов.
3. Опции отделены от своих аргументов.
4. У опций нет необязательных аргументов.
5. Если у опции несколько аргументов, они представляются одним словом и отделяются друг от друга запятыми или экранированными пробелами.
6. Все опции располагаются в командной строке перед операндами.
7. Специальный элемент командной строки --, который не является ни опцией, ни операндом, обозначает конец опций. Все последующие слова трактуются как операнды, даже если они начинаются со знака минус.
8. Порядок разных опций в командной строке не имеет значения. Если повторяется одна опция с аргументами, последние должны интерпретироваться в порядке, указанном в командной строке.
9. Порядок интерпретации операндов может зависеть от утилиты.
10. Если операнд задает читаемый или записываемый файл, то знак минус на его месте используется только для обозначения стандартного ввода (или стандартного вывода, если из контекста ясно, что специфицируется выходной файл).

getopts  цепочка_имен_опций переменная
                          [аргумент ...]